import sys
input = sys.stdin.readline
# C는 최소 목표값
C, N = map(int, input().split())
# 비용(cost)과 고객 수(cus)를 입력받기 위한 data 리스트
data = []
for i in range(N):
    data.append(list(map(int, input().split())))
# 비용이 적은 수 부터 넣어주어야 min값을 찾을 때, 적은 값과 나중에 들어온 큰 값을 비교할 수 있다.
data = sorted(data, key = lambda x: x[0])
# print(data)

# 비용이 매우 클때를 가정하고 무한히 큰 수를 지정한다.
INF = 1e9
# hotel은 비용을 담을 리스트이다.
# 범위가 C+100인 이유는 비용으로 얻을 수 있는 고객의 수가 100보다 작거나 같은 값이기 때문이다.
# 예를 들어 C = 1이고 1원으로 100명의 고객을 얻을 수 있다면 hotel[100]=1이다. hotel은 [0,1000,1000,...,1] 그러므로 범위는 C+100이 된다.
hotel = [INF for i in range(C+100)]
hotel[0]=0

# 비용과 고객 수를 뽑아서 for문을 돈다.
for cost, cus in data:
    for i in range(cus, C+100): # cus로 시작하는 것은 cus명을 채우기 위해 드는 비용을 찾기 위해서이다.
        hotel[i] = min(hotel[i], hotel[i-cus]+cost) # 원래 있던 무한히 큰 비용 or i-cus비용으로 채웠던 비용과 cus명 채우기 전 비용과 현재 비용을 더한값을 비교한다.
    # print(hotel[:11])
# 여기서 중요한 것은 hotel[C]로 찾으면 안된다는 것이다. '적어도 C명 늘이기 위해 형택이가 투자해야 하는 돈의 최솟값' 이라고 했으므로 적어도 C명 이상을 채울 수 없는 값을 찾되, 더 많은 사람을 찾을 수 있는 hotel[C:] 법위 에서 최솟값을 구해야한다.
# print(hotel)
print(min(hotel[C:]))

'''
입력 예시
10 3
3 1
2 2
1 3
출력 예시
[[1, 3], [2, 2], [3, 1]] # cost와 cus를 cost가 작은 수로 정렬한 모습이다.
[0, 1000000000.0, 1000000000.0, 1, 1000000000.0, 1000000000.0, 2, 1000000000.0, 1000000000.0, 3, 1000000000.0, 1000000000.0] # 첫번째 for문에서 1원으로 3명을 채우는 모습이다. 편의를 위해 일단 hotel[:11]까지 잘랐다.
[0, 1000000000.0, 2, 1, 4, 3, 2, 5, 4, 3, 6, 5] # 두번째 for 문에서 2원으로 2명을 채우는 모습이다. 5번째 3원으로 4명을 채우는 경우 5-2(3)번째 값인 1원으로 3원 채운 값에 현재 비용(2)을 더해서 4명을 만드는 것이 값이 최적이다.
[0, 3, 2, 1, 4, 3, 2, 5, 4, 3, 6, 5] # 세번째 for문에서 3원으로 1명을 채우는 모습이다.
[0, 3, 2, 1, 4, 3, 2, 5, 4, 3, 6, 5, 4, 7, 6, 5, 8, 7, 6, 9, 8, 7, 10, 9, 8, 11, 10, 9, 12, 11, 10, 13, 12, 11, 14, 13, 12, 15, 14, 13, 16, 15, 14, 17, 16, 15, 18, 17, 16, 19, 18, 17, 20, 19, 18, 21, 20, 19, 22, 21, 20, 23, 22, 21, 24, 23, 22, 25, 24, 23, 26, 25, 24, 27, 26, 25, 28, 27, 26, 29, 28, 27, 30, 29, 28, 31, 30, 29, 32, 31, 30, 33, 32, 31, 34, 
33, 32, 35, 34, 33, 36, 35, 34, 37, 36, 35, 38, 37, 36, 39] # 11번째(10명)값을 보면 6인데, 13번째(12명)을 보면 4이다. 즉 12명을 채우는 것이 더 최솟값이므로 이를 답으로 출력해야 한다.

'''
